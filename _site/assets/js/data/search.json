[ { "title": "Javascript 이벤트 루프 (Event loop)", "url": "/posts/event-loop/", "categories": "Javascript", "tags": "Javascript's 33 concepts, event loop", "date": "2020-08-20 20:00:00 +0900", "snippet": "Comming Soon" }, { "title": "브라우저 렌더링 과정에 대하여", "url": "/posts/browser-render/", "categories": "브라우저", "tags": "browser render", "date": "2020-08-20 20:00:00 +0900", "snippet": "Comming Soon" }, { "title": "Javascript 원시 타입 vs 참조 타입 (Primitive vs Reference)", "url": "/posts/primitive-type/", "categories": "Javascript", "tags": "Javascript's 33 concepts, Primitive Type", "date": "2020-08-20 19:00:00 +0900", "snippet": "Javascript에서 제공하는 타입에는 원시 타입 (Primitive type)과 참조 타입 (Reference type)이 존재한다.원시 타입의 변수는 값 자체를 보관 한다. 값 자체는 변할 수 없는 불변의 성질을 가진다.Primitive Type 원시 타입 설명 Number 숫자 String 문자 Boolean true/false Undefined 값을 할당하..." }, { "title": "Javascript 호출 스택 (call stack)", "url": "/posts/callstack/", "categories": "Javascript", "tags": "Javascript's 33 concepts", "date": "2020-08-18 13:30:00 +0900", "snippet": "Javascript 는 단일 쓰레드 (Single-Thread) 프로그래밍 언어로 단일 호출 스택(call stack)을 가진다.단일 스택을 가지고 있다는 것은 한번에 하나의 task 만 처리할 수 있다는 의미이다.콜 스택은 함수를 호출 하기 위한 정보를 담는 구조이다.스택이라는 이름에서도 알수 있듯이 콜 스택은 후입선출(LIFO, Last In First Out) 으로 동작한다.먼저 아래의 예제를 보자.function third() { console.log(&#39;hello 🙃&#39;) // throw new E..." } ]
